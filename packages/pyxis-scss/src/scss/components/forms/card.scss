////
/// Generated classes for card control styling.
/// @group COMPONENTS
////

@use "../../foundations";
@use "../../lib";
@use "mixins";
@use "variables";

/// Set general properties for card control fields as radio-card and checkbox-card.
///
/// @example scss - Grouped cards - Horizontal layout (default)
///    <div class="form-card-group">
///      <label class="form-card"></label>
///      <label class="form-card"></label>
///    </div>
///
/// @example scss - Grouped cards - Vertical layout
///    <div class="form-card-group form-card-group--column">
///      <label class="form-card"></label>
///      <label class="form-card"></label>
///    </div>
///
/// @example scss - Default card with checkbox
///    <div class="form-card-group">
///      <label class="form-card">
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <input type="checkbox" name="default" class="form-control__checkbox" />
///      </label>
///    </div>
///
/// @example scss - Default card with radio
///    <div class="form-card-group">
///      <label class="form-card">
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <input type="radio" name="default" class="form-control__checkbox" />
///      </label>
///    </div>
///
/// @example scss - Default card with checked input
///    <div class="form-card-group">
///      // Please note that adding `form-card--checked` is mandatory for a correct interaction.
///      <label class="form-card form-card--checked">
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <input checked />
///      </label>
///    </div>
///
/// @example scss - Default card with disabled input
///    <div class="form-card-group">
///      // Please note that adding `form-card--disabled` is mandatory for a correct interaction.
///      <label class="form-card form-card--disabled">
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <input disabled />
///      </label>
///    </div>
///
/// @example scss - Default card with error
///    <div class="form-card-group">
///      <label class="form-card form-card--error">
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <input checked />
///      </label>
///      <div class="form-card-group__error-message">Error message</div>
///    </div>
///
/// @example scss - Card with icon
///    <div class="form-card-group">
///      <label class="form-card">
///        <span class="form-card__addon form-card__addon--with-icon">
///          <svg width="24" height="24"></svg>
///        </span>
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <input checked />
///      </label>
///    </div>
///
/// @example scss - Card with text addon
///    <div class="form-card-group">
///      <label class="form-card">
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <span className="form-card__addon">â‚¬ 1.000,00</span>
///        <input checked />
///      </label>
///    </div>
///
/// @example scss - Card large (with image)
///    <div class="form-card-group">
///      <label className="form-card form-card--large">
///          <span className="form-card__addon">
///            <img width="70" height="70" />
///          </span>
///        <span class="form-card__content-wrapper">
///          <span class="form-card__title">Title card</span>
///          <span class="form-card__text">Text description</span>
///        </span>
///        <input checked />
///      </label>
///    </div>
///
/// @access public
.form-card {
  @include foundations.columnGap(xs);
  @include foundations.radius(s);
  @include mixins.fieldStateDefault;
  align-items: center;
  border: variables.$borderWidth solid foundations.color(neutral85);
  cursor: pointer;
  display: flex;
  padding: foundations.spacing(s) foundations.spacing(m);
  transition-duration: foundations.duration(fast);
  transition-property: border-color, box-shadow, outline-color;
  transition-timing-function: foundations.timing(base);
  width: 100%;
  will-change: border-color, box-shadow, outline-color;

  &:active:not( &--disabled ) {
    border-color: foundations.color(actionDark);
    outline-color: rgba(foundations.color(actionDark), 0.2);

    @include lib.onSafari {
      @include mixins.shadow(rgba(foundations.color(actionDark), 0.2));
    }
  }
}

.form-card--checked:not(:focus-within, :active, .form-card--error, .form-card--disabled) {
  @include foundations.elevation(s, action15);
  border-color: foundations.color(actionBase);
}

.form-card--disabled {
  @include mixins.fieldStateDisable;
}

.form-card--error {
  @include mixins.fieldStateError;

  .form-control__checkbox,
  .form-control__radio {
    @include mixins.fieldControlError;
  }
}

.form-card--large {
  @include foundations.rowGap(xs);
  @include foundations.padding(s);
  align-items: start;
  display: grid;
  grid-template-areas: ". addon input" "content content content";
  grid-template-columns: 20px auto 20px;
  grid-template-rows: auto 1fr;
  position: relative;
  text-align: center;

  .form-control__checkbox,
  .form-control__radio {
    grid-area: input;
  }
}

.form-card__content-wrapper {
  flex: 1;
  user-select: none;

  .form-card--large & {
    grid-area: content;
    padding-bottom: foundations.spacing(2xs);
  }
}

.form-card__title,
.form-card__text {
  display: block;

  .form-card--disabled & {
    color: foundations.color(neutral50);
  }
}

.form-card__title {
  @include foundations.text(m, bold);
}

.form-card__text {
  @include foundations.text(m, book);
  color: foundations.color(neutral25);
}


.form-card__addon {
  @include foundations.text(m, bold);
  display: inline-flex;

  .form-card--large & {
    grid-area: addon;
    padding-top: foundations.spacing(2xs);
  }

  .form-card--disabled & {
    color: foundations.color(neutral50);
    filter: grayscale(1);
  }
}

.form-card__addon--with-icon {
  color: foundations.color(actionBase);

  .form-card--error & {
    color: foundations.color(errorBase);
  }
}

.form-card-group {
  @include foundations.columnGap(xs);
  @include foundations.rowGap(xs);
  display: grid;
  grid-auto-columns: 1fr;
  grid-auto-flow: row;
  justify-content: center;
  position: relative;

  @include foundations.mq(xsmall) {
    grid-auto-flow: column;
  }
}

.form-card-group--column {
  grid-auto-flow: row;
}

.form-card-group--row {
  grid-auto-flow: column;
}
