#!/usr/bin/env bash

#############################################################################
#                                                                           #
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN     #
#                                                                           #
#############################################################################

# script exit when a command fails
set -o errexit
# catch a command error in pipe execution
set -o pipefail
# exit when try to use undeclared variables
# set -o nounset
# print and expand each command to stdout before executing it
set -o xtrace

if [ $# -eq 0 ]; then
  echo "Missing required argument: environment"
  exit 1
fi

export ENV=$1
export AWS_DEFAULT_REGION="eu-west-1"
export VERSION="${DRONE_TAG:-$DRONE_COMMIT_SHA}"

# Check if artifact exists for current branch
if aws s3 ls s3://prima-artifacts-encrypted/microservices/pyxis/"${VERSION}-${ENV}".tar.gz >/dev/null; then
  echo "Artifact already exists!"
  exit 0
fi

if [ "$ENV" = "staging" ]; then
  yarn storybook:build
  yarn sassdocs:build
  mkdir build
  mkdir build/react-staging
  mkdir build/scss-staging
  cp -R packages/pyxis-react/storybook-static/* build/react-staging
  cp -R packages/pyxis-scss/sassdoc/* build/scss-staging
  tar czf "${VERSION}"-"${ENV}".tar.gz build
fi

if [ "$ENV" = "production" ]; then
  yarn storybook:build
  yarn sassdocs:build
  mkdir build
  mkdir build/react
  mkdir build/scss
  cp -R packages/pyxis-react/storybook-static/* build/react
  cp -R packages/pyxis-scss/sassdoc/* build/scss
  tar czf "${VERSION}"-"${ENV}".tar.gz build
fi

aws --region="eu-west-1" s3 cp "${VERSION}"-"${ENV}".tar.gz s3://prima-artifacts-encrypted/microservices/pyxis/"${VERSION}"-"${ENV}".tar.gz
